import imrt_robot_serial
import signal
import time
import sys
import random

LEFT = -1
RIGHT = 1
FORWARDS = 1
BACKWARDS = -1
DRIVING_SPEED = 100
TURNING_SPEED = 100
CORRECTING_SPEED = 150 #ADD (150 good speed)
STOP_DISTANCE = 25 #Original 25
CORRECT_DISTANCE = 20 #ADD (recheck once turn code added in, might be too low?)
TURN_DISTANCE = 35 #TO BE CHANGED for correction

def stop_robot(duration):

    iterations = int(duration * 10)
    
    for i in range(iterations):
        motor_serial.send_command(0, 0)
        time.sleep(0.10)



def drive_robot(direction, duration):
    
    speed = DRIVING_SPEED * direction
    iterations = int(duration * 10)

    for i in range(iterations):
        motor_serial.send_command(speed, speed)
        time.sleep(0.10)



def turn_robot_90_angle(direction): #90turn

    iterations = (20)
    
    for i in range(iterations):
        motor_serial.send_command(TURNING_SPEED * direction, -TURNING_SPEED * direction)
        time.sleep(0.10)


def correct_robot_right():  #ADD works and right direction

    direction = 1
    iterations = 5
    
    for i in range(iterations):
        motor_serial.send_command(CORRECTING_SPEED * 1, TURNING_SPEED * 1)
        time.sleep(0.10)
        
def correct_robot_left():  #ADD works and right direction

    direction = 1
    iterations = 5
    
    for i in range(iterations):
        motor_serial.send_command(TURNING_SPEED * 1, CORRECTING_SPEED * 1)
        time.sleep(0.10)



execution_frequency = 10 
execution_period = 1. / execution_frequency


motor_serial = imrt_robot_serial.IMRTRobotSerial()


try:
    motor_serial.connect("/dev/ttyACM0")
except:
    print("Could not open port. Is your robot connected?\nExiting program")
    sys.exit()

    
motor_serial.run()

print("Entering loop. Ctrl+c to terminate")
while not motor_serial.shutdown_now :





#most below 90 system check

    
    dist_1 = motor_serial.get_dist_1()
    dist_2 = motor_serial.get_dist_2()
    dist_3 = motor_serial.get_dist_3()
    dist_4 = motor_serial.get_dist_4()
    print("Dist 1:", dist_1, "   Dist 2:", dist_2)

    if dist_1 and dist_3 > TURN_DISTANCE or dist_2 and dist_4 > TURN_DISTANCE: #Robot turn
      drive_robot(FORWARDS, 0.1)
      
      if dist_2 and dist_4 > TURN_DISTANCE:
        drive_robot(FORWARDS, 5.0)
        turn_robot_90_angle(1)
      
      elif dist_1 and dist_3 > TURN_DISTANCE:
        drive_robot(FORWARDS, 5.0)
        turn_robot_90_angle(-1)
           
    else:
      drive_robot(FORWARDS, 0.1)


print("Goodbye")
